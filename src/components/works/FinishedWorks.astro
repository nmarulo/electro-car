---
import {getCollection} from 'astro:content';
import CardWork from './CardWork.astro';
const works = await getCollection('works');

const filters = works.map(value => value.data)
                     .map(value => ({
                       filter: value.filter,
                       tag: value.tags.at(0)
                     }))
                     .filter((value, index, self) =>
                       index === self.findIndex(find => find.filter === value.filter)
                     );
---

<div class="finished-works-hero position-relative">
  <div class="overlay"></div>
  <div class="container position-relative z-3">
    <div class="row py-5">
      <div class="col-lg-8 mx-auto text-center text-white">
        <h1 class="display-4 fw-bold mb-3">Nuestros Trabajos</h1>
        <p class="lead">Descubra nuestra galería de proyectos terminados en audio profesional y electromecánica</p>
      </div>
    </div>
  </div>
</div>

<div class="container py-5">
  <div class="row mb-4">
    <div class="col-12">
      <div class="filters-group-wrap text-center">
        <div class="filter-button-group">
          <button type="button"
                  class="btn btn-outline-danger active"
                  data-filter="*">Todos
          </button>
          {
            filters.map(filter => {
              return (
                <button type="button"
                        class="btn btn-outline-danger text-capitalize me-1"
                        data-filter={`.${filter.filter}`}>{filter.tag}</button>
              );
            })
          }
        </div>
      </div>
    </div>
  </div>
  
  <div class="portfolio-grid gap-0 column-gap-3">
    {
      works.map(work => {
        const {
          slug,
          data
        } = work;

        return (
          <div class={`portfolio-item mb-3 ${data.filter}`}>
            <CardWork work={work}/>
          </div>
        );
      })
    }
  </div>
</div>

<style>
  .finished-works-hero {
    background-image: url('https://picsum.photos/1920/600');
    background-size: cover;
    background-position: center;
    padding: 100px 0;
    position: relative;
  }

  .portfolio-grid {
    columns: 3;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 1;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-button-group button');
    const portfolioItems = document.querySelectorAll('.portfolio-item');

    filterButtons.forEach((button) => {
      button.addEventListener('click', function (this: Element) {
        filterButtons.forEach((btn) => btn.classList.remove('active'));

        this.classList.add('active');

        const filterValue = this.getAttribute('data-filter') || '*';

        portfolioItems.forEach((item) => {
          if (filterValue === '*') {
            (item as HTMLElement).style.display = 'block';
          } else if (item.classList.contains(filterValue.replace('.', ''))) {
            (item as HTMLElement).style.display = 'block';
          } else {
            (item as HTMLElement).style.display = 'none';
          }
        });
      });
    });
  });
</script>
